//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Scripts/Player/PlayerInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputs"",
    ""maps"": [
        {
            ""name"": ""BasedMoveSet"",
            ""id"": ""8df66955-1f0a-434b-be53-dbe5e70ded93"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""d91f6e6e-e8db-4e2d-80c6-3a8692377471"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""e1dbb019-bb60-494b-9e82-02bffb5fac88"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""AttackCombo"",
                    ""type"": ""Button"",
                    ""id"": ""66bc7a85-0aa4-4866-9b14-3062e6091f1b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grabbing"",
                    ""type"": ""Button"",
                    ""id"": ""c687acd7-e22d-4059-8be6-77cc2f8c9b35"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""778fd3cc-dbf9-4534-85e8-82bf4599ccda"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TakeDamage"",
                    ""type"": ""Button"",
                    ""id"": ""6063af72-94ee-4c66-9407-4ec2cf8e0408"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill 1"",
                    ""type"": ""Button"",
                    ""id"": ""b0fb5372-9763-4b4d-95d5-14bce1ea3a25"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill 2"",
                    ""type"": ""Button"",
                    ""id"": ""5fd2016f-4485-41c1-bdaa-90965b9ac3fd"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""977813dd-1287-4c06-8b50-4558ded6c4e7"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill 3"",
                    ""type"": ""Button"",
                    ""id"": ""a39ddfd5-85e9-4282-84c9-fc8bdf8ef7ad"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill 4"",
                    ""type"": ""Button"",
                    ""id"": ""00e27680-163d-4cab-a041-c8de7d4d6b55"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""bc17cd3d-70ff-47ec-8c31-a6f36d7dcc5e"",
                    ""path"": ""3DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""58b0090b-57fc-4af3-9f34-f05c902c2558"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""6774923f-1bc9-4227-82a2-7bf70c927b06"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Forward"",
                    ""id"": ""93a30891-d58c-4a30-90f9-eb34b1b35cd8"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Backward"",
                    ""id"": ""ca4d457e-ece3-4cfb-b833-775778e9ad0f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Controller Left Analog"",
                    ""id"": ""cdad6f2d-9cf3-40c5-a766-d1b2aeacd839"",
                    ""path"": ""3DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""abc6aca8-115d-473d-a164-c0266f2dd65f"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""1f321cfc-ccab-46e6-8c97-324bd86db22c"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""88f49fda-5a28-458c-a018-aa4f275bdd77"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""03f95932-e904-4221-ba96-e51667b9ac37"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Forward"",
                    ""id"": ""f8912551-4fa0-4a04-b6bd-592a4b0beec6"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Backward"",
                    ""id"": ""3848c084-2229-4658-9338-9d4890919572"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3c1d48ac-aa70-440d-82c9-2cf75cf0d94f"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AttackCombo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d37cb524-af18-44a9-a378-da3853c85ac7"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""784f522b-d797-4da0-86ba-da12d3238544"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e454ad25-76f8-4ced-a8d8-a9ba0b3d8929"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grabbing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""700d0d79-a8bf-4360-a5af-f004062ac258"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grabbing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8db00df1-8365-40c2-99e2-2a60402384ad"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""263c770c-6cd1-4ae6-a15f-6994027e8d7e"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TakeDamage"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4652b0f5-ca3f-4d2e-9425-0ab4b55d224b"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d16dbd2-59ee-4689-90a4-6c5f6aa5d9f5"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""160adaff-0d8e-40d8-9f10-c5a9457af045"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7febbd5c-af25-4be7-9252-be427a7cf894"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f59ee40a-ad69-488d-bc09-482b549e1f93"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6955fa4a-4d77-4808-8d13-9a6e104f3797"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""686de398-68b9-41e8-9a3b-ee46296f5dd4"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89f167c5-375e-4e01-9ce1-d0c8e5eaf69c"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bfb84340-3234-48e1-8968-52aaa55b4607"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62af5822-0540-4e83-8d5b-eec935e71323"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // BasedMoveSet
        m_BasedMoveSet = asset.FindActionMap("BasedMoveSet", throwIfNotFound: true);
        m_BasedMoveSet_Movement = m_BasedMoveSet.FindAction("Movement", throwIfNotFound: true);
        m_BasedMoveSet_Jump = m_BasedMoveSet.FindAction("Jump", throwIfNotFound: true);
        m_BasedMoveSet_AttackCombo = m_BasedMoveSet.FindAction("AttackCombo", throwIfNotFound: true);
        m_BasedMoveSet_Grabbing = m_BasedMoveSet.FindAction("Grabbing", throwIfNotFound: true);
        m_BasedMoveSet_Run = m_BasedMoveSet.FindAction("Run", throwIfNotFound: true);
        m_BasedMoveSet_TakeDamage = m_BasedMoveSet.FindAction("TakeDamage", throwIfNotFound: true);
        m_BasedMoveSet_Skill1 = m_BasedMoveSet.FindAction("Skill 1", throwIfNotFound: true);
        m_BasedMoveSet_Skill2 = m_BasedMoveSet.FindAction("Skill 2", throwIfNotFound: true);
        m_BasedMoveSet_Pause = m_BasedMoveSet.FindAction("Pause", throwIfNotFound: true);
        m_BasedMoveSet_Skill3 = m_BasedMoveSet.FindAction("Skill 3", throwIfNotFound: true);
        m_BasedMoveSet_Skill4 = m_BasedMoveSet.FindAction("Skill 4", throwIfNotFound: true);
    }

    ~@PlayerInputs()
    {
        UnityEngine.Debug.Assert(!m_BasedMoveSet.enabled, "This will cause a leak and performance issues, PlayerInputs.BasedMoveSet.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // BasedMoveSet
    private readonly InputActionMap m_BasedMoveSet;
    private List<IBasedMoveSetActions> m_BasedMoveSetActionsCallbackInterfaces = new List<IBasedMoveSetActions>();
    private readonly InputAction m_BasedMoveSet_Movement;
    private readonly InputAction m_BasedMoveSet_Jump;
    private readonly InputAction m_BasedMoveSet_AttackCombo;
    private readonly InputAction m_BasedMoveSet_Grabbing;
    private readonly InputAction m_BasedMoveSet_Run;
    private readonly InputAction m_BasedMoveSet_TakeDamage;
    private readonly InputAction m_BasedMoveSet_Skill1;
    private readonly InputAction m_BasedMoveSet_Skill2;
    private readonly InputAction m_BasedMoveSet_Pause;
    private readonly InputAction m_BasedMoveSet_Skill3;
    private readonly InputAction m_BasedMoveSet_Skill4;
    public struct BasedMoveSetActions
    {
        private @PlayerInputs m_Wrapper;
        public BasedMoveSetActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_BasedMoveSet_Movement;
        public InputAction @Jump => m_Wrapper.m_BasedMoveSet_Jump;
        public InputAction @AttackCombo => m_Wrapper.m_BasedMoveSet_AttackCombo;
        public InputAction @Grabbing => m_Wrapper.m_BasedMoveSet_Grabbing;
        public InputAction @Run => m_Wrapper.m_BasedMoveSet_Run;
        public InputAction @TakeDamage => m_Wrapper.m_BasedMoveSet_TakeDamage;
        public InputAction @Skill1 => m_Wrapper.m_BasedMoveSet_Skill1;
        public InputAction @Skill2 => m_Wrapper.m_BasedMoveSet_Skill2;
        public InputAction @Pause => m_Wrapper.m_BasedMoveSet_Pause;
        public InputAction @Skill3 => m_Wrapper.m_BasedMoveSet_Skill3;
        public InputAction @Skill4 => m_Wrapper.m_BasedMoveSet_Skill4;
        public InputActionMap Get() { return m_Wrapper.m_BasedMoveSet; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BasedMoveSetActions set) { return set.Get(); }
        public void AddCallbacks(IBasedMoveSetActions instance)
        {
            if (instance == null || m_Wrapper.m_BasedMoveSetActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_BasedMoveSetActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @AttackCombo.started += instance.OnAttackCombo;
            @AttackCombo.performed += instance.OnAttackCombo;
            @AttackCombo.canceled += instance.OnAttackCombo;
            @Grabbing.started += instance.OnGrabbing;
            @Grabbing.performed += instance.OnGrabbing;
            @Grabbing.canceled += instance.OnGrabbing;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @TakeDamage.started += instance.OnTakeDamage;
            @TakeDamage.performed += instance.OnTakeDamage;
            @TakeDamage.canceled += instance.OnTakeDamage;
            @Skill1.started += instance.OnSkill1;
            @Skill1.performed += instance.OnSkill1;
            @Skill1.canceled += instance.OnSkill1;
            @Skill2.started += instance.OnSkill2;
            @Skill2.performed += instance.OnSkill2;
            @Skill2.canceled += instance.OnSkill2;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
            @Skill3.started += instance.OnSkill3;
            @Skill3.performed += instance.OnSkill3;
            @Skill3.canceled += instance.OnSkill3;
            @Skill4.started += instance.OnSkill4;
            @Skill4.performed += instance.OnSkill4;
            @Skill4.canceled += instance.OnSkill4;
        }

        private void UnregisterCallbacks(IBasedMoveSetActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @AttackCombo.started -= instance.OnAttackCombo;
            @AttackCombo.performed -= instance.OnAttackCombo;
            @AttackCombo.canceled -= instance.OnAttackCombo;
            @Grabbing.started -= instance.OnGrabbing;
            @Grabbing.performed -= instance.OnGrabbing;
            @Grabbing.canceled -= instance.OnGrabbing;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @TakeDamage.started -= instance.OnTakeDamage;
            @TakeDamage.performed -= instance.OnTakeDamage;
            @TakeDamage.canceled -= instance.OnTakeDamage;
            @Skill1.started -= instance.OnSkill1;
            @Skill1.performed -= instance.OnSkill1;
            @Skill1.canceled -= instance.OnSkill1;
            @Skill2.started -= instance.OnSkill2;
            @Skill2.performed -= instance.OnSkill2;
            @Skill2.canceled -= instance.OnSkill2;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
            @Skill3.started -= instance.OnSkill3;
            @Skill3.performed -= instance.OnSkill3;
            @Skill3.canceled -= instance.OnSkill3;
            @Skill4.started -= instance.OnSkill4;
            @Skill4.performed -= instance.OnSkill4;
            @Skill4.canceled -= instance.OnSkill4;
        }

        public void RemoveCallbacks(IBasedMoveSetActions instance)
        {
            if (m_Wrapper.m_BasedMoveSetActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IBasedMoveSetActions instance)
        {
            foreach (var item in m_Wrapper.m_BasedMoveSetActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_BasedMoveSetActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public BasedMoveSetActions @BasedMoveSet => new BasedMoveSetActions(this);
    public interface IBasedMoveSetActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnAttackCombo(InputAction.CallbackContext context);
        void OnGrabbing(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnTakeDamage(InputAction.CallbackContext context);
        void OnSkill1(InputAction.CallbackContext context);
        void OnSkill2(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnSkill3(InputAction.CallbackContext context);
        void OnSkill4(InputAction.CallbackContext context);
    }
}
